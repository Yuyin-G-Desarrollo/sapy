<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>